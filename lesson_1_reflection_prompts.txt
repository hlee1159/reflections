How did viewing a diff between two versions of a file help you see the bug that was introduced?

    It was much easier because I only had to look at the ones that changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    I could be braver when I make changes because I can just go back to where I was before

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    Pros: A commit will only be made when a logical change is made; in other words, I will not have random commits.
    Cons: I have to manually make commits. I may sometimes lose everything if there is an error.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    When programming, changes in one file need to be synchronized by changing other files as well. This does not have quite often in other areas.

How can you use the commands git log and git diff to view the history of files?

    git bash is extremely difficult to use. It is really annoying. I can use git diff to see the differences between the commits I have made, obviously.

How might using version control make you more confident to make changes that could break something?

    Because I can always go back to where I was, I could be more risk taking when I make the changes.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to keep track of my files whenever I update my code. I want to share my code with other people online.
